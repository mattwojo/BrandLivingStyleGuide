
extends layout

block content
  main
    h1 Form Elements
    nav.nav-horizontal
      ul
        li
          a(href="#buttons") Buttons
        li
          a(href="#dynamicButtons") Dynamic Buttons
        li
          a(href="#dropdown") Dropdown Menu
        li
          a(href="#inputs") Inputs
        li
          a(href="#radio") Radio Buttons
        li
          a(href="#checkbox") Checkboxes
    article.grid_12#buttons
      h2 Buttons
      h3.example-text Example
      button.primary-button.grid_3 Primary
      button.secondary-button.grid_3 Secondary
      section
        article.grid_6.far-left
          h3.example-text The Code
          xmp.code <button class="primary-button"></button>
          xmp.code <button class="secondary-button"></button>
        aside.grid_6.far-right
          h3.example-text Notes
          p.
            Add styles to your buttons by using the #[span.text-accent .primary-button ] or #[span.text-accent .secondary-button ] class!
    article.grid_12#dynamicButtons
      h2 Dynamic Buttons
      h3.example-text Example
      button.primary-button.grow.grid_3 Primary
      button.secondary-button.grow.grid_3 Secondary
      section
        article.grid_6.far-left
          h3.example-text The Code
          xmp.code <button class="primary-button grow"></button>
          xmp.code <button class="secondary-button grow"></button>
        aside.grid_6.far-right
          h3.example-text Notes
          p.
            Make your buttons a bit more dynamic and noticeable by using the #[span.text-accent .grow ] class to apply some CSS Transition animation (1.5s duration) to the button width, letter-spacing, and font-color.
    div.heading-break
    article.grid_12#dropdown
      h2 Dropdown Menus
      h3.example-text
      div.dd-wrapper
        div#dd.wrapper-dropdown(tabindex='1')
          span Sample Dropdown
          ul.dropdown
            li
              a(href="#")
                | Select Item 1
            li
              a(href="#")
                | Select Item 2
            li
              a(href="#")
                | Select Item 3
      section
        article.far-left.grid_6
          h3.example-text The Code
          xmp.code.
            <div id="dd" class="wrapper-dropdown" tabindex="1">
              <span>
                Sample Dropdown
              </span>
              <ul class="dropdown">
                <li>
                  <a href="#">
                    Select Item 1
                  </a>
                </li>
                <li>
                  <a href="#">
                    Select Item 2
                  </a>
                </li>
                <li>
                  <a href="#">
                    Select Item 3
                  </a>
                </li>
              </ul>
            </div>
        aside.far-right.grid_6
          h3.example-text Notes
          p.
            Each dropdown requires a wrapper div with a #[span.text-accent #dd ]id and #[span.text-accent .wrapper-dropdown ] class. The dropdown itself is an ul with a #[span.text-accent .dropdown ] class. The functionality is build using jQuery.
    div.heading-break
    article.grid_12#inputs
      h2 Input Fields
      fieldset
        legend Personal Information
        input(type='text', placeholder='First name')
        section.grid_6.far-left
          h3.example-text The Code
          xmp.code.
            <fieldset>
            <legend/barcharts>Personal Information</legend>
            <label>First name</label>
            <legend>Personal Information</legend>
            <input type="text" placeholder="First name">
            </fieldset>
        aside.grid_6.far-right
          h3.example-text Notes
          p.
            The HTML &lt;fieldset&gt; element is used to group controls and labels (&lt;label&gt;) within a web form, also benefiting from global attribues: `disabled` (granting the ability to disable it's descendants), `form` (inheriting the value of the form attribute id its related to) and `name` (given by the first child &lt;legend&gt; element, used to group its associated elements).
        section.grid_12
          h2.extra-heading Validating Input Fields
          fieldset
            legend In-range / Out-of-range validation
            input.invalid(type='number', min='1', max='5', placeholder='Rate on a 1-5 scale')
        section
          article.grid_6.far-left
            h3.example-text Example
            xmp.code. <input type='number', min='1', max='5', placeholder='Rate on a 1-5 scale' class='invalid'>
          aside.grid_6.far-right
            h3.example-text Notes
            p The `:in-range` and `:out-of-range` pseudo-classes enable some validation styling without any need for Javascript.
          fieldset
            legend Text area :read-write mutability
            textarea(name='textarea 1', cols='18', rows='3',) Read-Write
            textarea(name='textarea 2', cols='18', rows='3', readonly='') Read-Only
            textarea(name='textarea 3', cols='18', rows='3', disabled='') Disabled
        section
          article.grid_6.far-left
            h3.example-text Example
            xmp.code.
              <textarea name="textarea 1" cols="18" rows="3">Read-Write</textarea>

              <textarea name="textarea 2" cols="18" rows="3" readonly />Read-Only</textarea>

              <textarea name="textarea 3" cols="18" rows="3" disabled>Disabled</textarea>
          aside.grid_6.far-right
            h3.example-text Notes
            p The `:read-write`, `read-only`, and `diabled` pseudo-classes represent whether a textarea's contents are user-alterable with their applied styles.
    div.heading-bre| Choice 1
    article.grid_12#radioradio-button1
      section.radio
        h2 Radio Buttons
        fieldset
          input#radio01(type='radio', name='radio')
          label(for='radio01')
            span
            | Choice 1
        fieldset
          input#radio02(type='radio', name='radio')
          label(for='radio02')
            span
            | Choice 2
        fieldset
          input#radio03(type='radio', name='radio')
          label(for='radio03')
            span
            | Choice 3
      section
        figure.grid_6.far-left
          h3.example-text The Code
          xmp.code.
            <input id="radio01" type="radio" name="radio">
            <label for "radio01">Choice 1</label>

            <input id="radio02" type="radio" name="radio">
            <label for "radio02">Choice 2</label>

            <input id="radio03" type="radio" name="radio">
            <label for "radio02">Choice 3</label>
        aside.grid_6.far-right
          h3.example-text Notes
          p.
            Custom styled radio buttons, styled for all type='radio' inputs with a label proceded by a #[span.text-accent &lt;span&gt; ] element. *Only one button can be selected for radio inputs with the same name.
    div.heading-break
    article.grid_12#checkbox
      section.checkbox
        h2 Checkboxes
        fieldset
          input#check1(type='checkbox', name='check' value='check1')
          label.checkbox-label.radio-label(for='check1') Choice A
          input#check2(type='checkbox', name='check' value='check2')
          label.checkbox-label.radio-label(for='check2') Choice B
      section
        figure.grid_6.far-left
          h3.example-text The Code
          xmp.code <fieldset>
            <legend>Checkboxes</legend>
            <input id="check1" type="checkbox" name="" value="check1">
            <label class="checkbox-label" for "check1">Choice A</label>
            <input id="check2" type="checkbox" name="radio">
            <label class="checkbox-label" for "check2">Choice B</label>
          </fieldset>
        aside.grid_6.far-right
          h3.example-text Notes
          p.
            Custom styled checkboxes. To use, create an input checkbox with a label that combines the #[span.text-accent .radio-label ] and #[span.text-accent .checkbox-label ] classes.



